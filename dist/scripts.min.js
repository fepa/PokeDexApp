let pokemonRepository = (function () {
  let e = document.querySelector("#modal-container"),
    t = [],
    n = "https://pokeapi.co/api/v2/pokemon/?limit=99";
  function o(e) {
    c(e).then(function () {
      i(e);
    });
  }
  function i(t) {
    let n = document.querySelector(".modal-title");
    (n.innerHTML = ""), (n.innerText = t.name);
    let o = document.querySelector(".modal-body");
    o.innerHTML = "";
    let i = document.createElement("p");
    i.innerText = "H: " + t.height + "m";
    let l = document.createElement("p");
    l.innerText = "W: " + t.weight + "kg";
    let a = document.createElement("p");
    a.innerText = t.types;
    let c = document.createElement("img");
    (c.src = t.imageUrl),
      (c.style.height = "200px"),
      o.appendChild(i),
      o.appendChild(l),
      o.appendChild(a),
      o.appendChild(c),
      e.classList.add("is-visible");
  }
  function l() {
    e.classList.remove("is-visible");
  }
  function a(e) {
    "object" == typeof e && "name" in e && "detailsUrl" in e
      ? t.push(e)
      : console.log("you need an object");
  }
  function c(e) {
    let t = e.detailsUrl;
    return fetch(t)
      .then(function (e) {
        return e.json();
      })
      .then(function (t) {
        (e.imageUrl = t.sprites.other.dream_world.front_default),
          (e.height = t.height),
          (e.weight = t.weight),
          (e.types = []),
          t.types.forEach(function (t) {
            e.types.push(
              t.type.name.charAt(0).toUpperCase() + t.type.name.slice(1)
            );
          });
      })
      .catch(function (e) {
        console.error(e);
      });
  }
  return (
    window.addEventListener("keydown", (t) => {
      "Escape" === t.key && e.classList.contains("is-visible") && l();
    }),
    e.addEventListener("click", (t) => {
      t.target === e && l();
    }),
    document
      .getElementById("pokemon-search")
      .addEventListener("keyup", function () {
        let e, t, n, o, i, l;
        (e = document.getElementById("pokemon-search")),
          (t = e.value.toUpperCase()),
          (o = document.querySelector(".pokemon-list")),
          (n = o.getElementsByTagName("li"));
        for (let e = 0; e < n.length; e++)
          console.log(n),
            (i = n[e].getElementsByTagName("button")[0]),
            (l = i.textContent || i.innerText).toUpperCase().indexOf(t) > -1
              ? (n[e].style.display = "")
              : (n[e].style.display = "none");
      }),
    {
      add: a,
      getAll: function () {
        return t;
      },
      filterPokemon: function (e, n) {
        return t.filter(function (t) {
          return t[n] === e;
        });
      },
      addListItem: function (e) {
        let t = document.querySelector(".pokemon-list"),
          n = document.createElement("li");
        n.classList.add("col-12"), n.classList.add("col-sm-4");
        let i = document.createElement("button");
        (i.innerText = e.name),
          i.classList.add("btn"),
          i.classList.add("btn-outline-secondary"),
          i.classList.add("btn-block"),
          i.setAttribute("data-toggle", "modal"),
          i.setAttribute("data-target", "#modal-container"),
          n.appendChild(i),
          t.appendChild(n),
          i.addEventListener("click", function () {
            o(e);
          });
      },
      showDetails: o,
      loadList: function () {
        return fetch(n)
          .then(function (e) {
            return e.json();
          })
          .then(function (e) {
            e.results.forEach(function (e) {
              a({
                name: e.name.charAt(0).toUpperCase() + e.name.slice(1),
                detailsUrl: e.url,
              });
            });
          })
          .catch(function (e) {
            console.error(e);
          });
      },
      loadDetails: c,
      showModal: i,
      hideModal: l,
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (e) {
    pokemonRepository.addListItem(e);
  });
});
